/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package p_p_3;

import javax.swing.JOptionPane;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
/**
 *
 * @author Epps
 */
public class Bookstore_GUI extends javax.swing.JFrame{

    /**
     * Creates new form Bookstore_GUI
     */
    public Bookstore_GUI() {
       
        initComponents();
        
        Searchgroupbuttons.add(TitleRadio);
        Searchgroupbuttons.add(AuthorRadio);
        Searchgroupbuttons.add(ISBNRadio);
        
        Load(Search.View_All());
    }
    
    public static void infoBox(String infoMessage, String titleBar)
    {
        JOptionPane.showMessageDialog(null, infoMessage, "InfoBox: " + titleBar, JOptionPane.INFORMATION_MESSAGE);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane4 = new javax.swing.JTabbedPane();
        Searchgroupbuttons = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        book_search = new javax.swing.JPanel();
        add_To_Cart_Button = new javax.swing.JButton();
        search_button = new javax.swing.JButton();
        search_box = new javax.swing.JTextField();
        TitleRadio = new javax.swing.JRadioButton();
        AuthorRadio = new javax.swing.JRadioButton();
        ISBNRadio = new javax.swing.JRadioButton();
        View_All_Button = new javax.swing.JButton();
        select_All_Button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Results_Table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        Clear_Cart_Button = new javax.swing.JButton();
        Remove_Item_Button = new javax.swing.JButton();
        Checkout_Button = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        cart_Table = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        file_menu = new javax.swing.JMenu();
        options = new javax.swing.JMenu();
        clear_cart = new javax.swing.JMenuItem();
        view_log = new javax.swing.JMenuItem();
        exit_menu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("bookstore_frame"); // NOI18N

        add_To_Cart_Button.setText("Add to Cart");
        add_To_Cart_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                add_To_Cart_ButtonMouseReleased(evt);
            }
        });

        search_button.setText("Search");
        search_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                search_buttonMouseReleased(evt);
            }
        });

        search_box.setText("Search Title/Author/ISBN...");
        search_box.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                search_boxMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                search_boxMouseReleased(evt);
            }
        });
        search_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_boxActionPerformed(evt);
            }
        });

        TitleRadio.setText("Title");

        AuthorRadio.setText("Author");

        ISBNRadio.setText("ISBN");

        View_All_Button.setText("View All");
        View_All_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                View_All_ButtonMouseReleased(evt);
            }
        });

        select_All_Button.setText("Select All");
        select_All_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                select_All_ButtonMouseReleased(evt);
            }
        });

        Results_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title", "Author", "ISBN", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Results_Table);

        javax.swing.GroupLayout book_searchLayout = new javax.swing.GroupLayout(book_search);
        book_search.setLayout(book_searchLayout);
        book_searchLayout.setHorizontalGroup(
            book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book_searchLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(book_searchLayout.createSequentialGroup()
                        .addGroup(book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(search_box, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(18, 18, 18)
                        .addGroup(book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(add_To_Cart_Button, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(search_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(View_All_Button)
                            .addComponent(select_All_Button)))
                    .addGroup(book_searchLayout.createSequentialGroup()
                        .addComponent(TitleRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AuthorRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ISBNRadio)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        book_searchLayout.setVerticalGroup(
            book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(book_searchLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleRadio)
                    .addComponent(AuthorRadio)
                    .addComponent(ISBNRadio))
                .addGroup(book_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(book_searchLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(View_All_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select_All_Button)
                        .addGap(142, 142, 142)
                        .addComponent(add_To_Cart_Button))
                    .addGroup(book_searchLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(294, 294, 294))
        );

        jTabbedPane1.addTab("Book List", book_search);

        Clear_Cart_Button.setText("Clear Cart");
        Clear_Cart_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Clear_Cart_ButtonMouseReleased(evt);
            }
        });

        Remove_Item_Button.setText("Remove Item");
        Remove_Item_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Remove_Item_ButtonMouseReleased(evt);
            }
        });

        Checkout_Button.setText("Checkout");
        Checkout_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Checkout_ButtonMouseReleased(evt);
            }
        });

        cart_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "ISBN", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(cart_Table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Checkout_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Remove_Item_Button, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(Clear_Cart_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Clear_Cart_Button)
                        .addGap(30, 30, 30)
                        .addComponent(Remove_Item_Button)
                        .addGap(36, 36, 36)
                        .addComponent(Checkout_Button)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cart", jPanel1);

        file_menu.setText("File");

        options.setText("Options");
        options.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                optionsMouseReleased(evt);
            }
        });

        clear_cart.setText("Clear Cart");
        clear_cart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                clear_cartMouseReleased(evt);
            }
        });
        options.add(clear_cart);

        view_log.setText("View Log");
        options.add(view_log);

        exit_menu.setText("Exit");
        exit_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_menuActionPerformed(evt);
            }
        });
        options.add(exit_menu);

        file_menu.add(options);

        jMenuBar1.add(file_menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void exit_menuActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        System.exit(0);
    }                                         

    private void search_buttonMouseReleased(java.awt.event.MouseEvent evt) {                                            
        HashMap stuff;
        String selection= search_box.getText();
        if(TitleRadio.isSelected()){
            stuff = Search.searchCsvLine(0,selection);
            Load(stuff);
        }
        else if(AuthorRadio.isSelected()){
            stuff = Search.searchCsvLine(1,selection);
            Load(stuff);
        }
        else if(ISBNRadio.isSelected()){
            stuff = Search.searchCsvLine(2, selection);
            Load(stuff);
        }
        else{
            
            infoBox("Please select a search method", "Error...");
            
        }
        
    }                                           

    private void search_boxActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    private void search_boxMouseReleased(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void search_boxMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
            String text=search_box.getText();
            if(text.equals("Search Title/Author/ISBN...")){
            search_box.setText("");
        }
    }                                       

    private void View_All_ButtonMouseReleased(java.awt.event.MouseEvent evt) {                                              
        // TODO add your handling code here:
        Load(Search.View_All());
        
    }                                             
    private void Load(HashMap viewsome){
        HashMap<Integer, String> selectresults = viewsome;
        if(!selectresults.isEmpty()) {
                
                int x=0;
                DefaultTableModel model = new DefaultTableModel(); 
              
                Results_Table.setModel(model);
                model.addColumn("Title");
                model.addColumn("Author");
                model.addColumn("ISBN");
                model.addColumn("Quantity");
                
                for(int item : selectresults.keySet()){

                    String [] items=selectresults.get(item).split(",");
                    model.addRow(new Object[]{items[0].toString(),items[1].toString(),items[2].toString(),items[3].toString()});
                    x++;
                    
                }
                  
        jScrollPane2.setViewportView(Results_Table);
        }
    }
 
    private void select_All_ButtonMouseReleased(java.awt.event.MouseEvent evt) {                                                
        Results_Table.addRowSelectionInterval(0, Results_Table.getRowCount()-1);
    }                                               

    private void add_To_Cart_ButtonMouseReleased(java.awt.event.MouseEvent evt) {                                                 
        // TODO add your handling code here:
        int []  rows=Results_Table.getSelectedRows();
        
        DefaultTableModel model = new DefaultTableModel(); 
              
                cart_Table.setModel(model);
                model.addColumn("Title");
                model.addColumn("Author");
                model.addColumn("ISBN");
                model.addColumn("Quantity");
        
        for(int x: rows){

            String Title = Results_Table.getModel().getValueAt(x, 0).toString();
            String Author = Results_Table.getModel().getValueAt(x, 1).toString();
            String ISBN = Results_Table.getModel().getValueAt(x, 2).toString();
                
            model.addRow(new Object[]{Title,Author,ISBN,"1"});
                  
        jScrollPane2.setViewportView(Results_Table);
        
        }
    }                                                

    private void Checkout_ButtonMouseReleased(java.awt.event.MouseEvent evt) {                                              
        // TODO add your handling code here:
    }                                             
    //Method clears cart from button
    private void Clear_Cart_ButtonMouseReleased(java.awt.event.MouseEvent evt) {                                                
        
        DefaultTableModel model = new DefaultTableModel(); 
              
                cart_Table.setModel(model);
                model.addColumn("Title");
                model.addColumn("Author");
                model.addColumn("ISBN");
                model.addColumn("Quantity");
                  
        jScrollPane2.setViewportView(Results_Table);
    }                                               

    private void Remove_Item_ButtonMouseReleased(java.awt.event.MouseEvent evt) {                                                 

    }                                                

    private void optionsMouseReleased(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
    }                                     
    //clear cart event from options
    private void clear_cartMouseReleased(java.awt.event.MouseEvent evt) {                                         
        DefaultTableModel model = new DefaultTableModel(); 
              
                cart_Table.setModel(model);
                model.addColumn("Title");
                model.addColumn("Author");
                model.addColumn("ISBN");
                model.addColumn("Quantity");
                  
        jScrollPane2.setViewportView(Results_Table);
    }                                        

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton AuthorRadio;
    private javax.swing.JButton Checkout_Button;
    private javax.swing.JButton Clear_Cart_Button;
    private javax.swing.JRadioButton ISBNRadio;
    private javax.swing.JButton Remove_Item_Button;
    private javax.swing.JTable Results_Table;
    private javax.swing.ButtonGroup Searchgroupbuttons;
    private javax.swing.JRadioButton TitleRadio;
    private javax.swing.JButton View_All_Button;
    private javax.swing.JButton add_To_Cart_Button;
    private javax.swing.JPanel book_search;
    private javax.swing.JTable cart_Table;
    private javax.swing.JMenuItem clear_cart;
    private javax.swing.JMenuItem exit_menu;
    private javax.swing.JMenu file_menu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JMenu options;
    private javax.swing.JTextField search_box;
    private javax.swing.JButton search_button;
    private javax.swing.JButton select_All_Button;
    private javax.swing.JMenuItem view_log;
    // End of variables declaration                   

}
